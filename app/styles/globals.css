@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-rgb: 255, 255, 255;
  --hero-height: 110vw;
  --hero-width: 110vw;
}
@screen md {
  :root {
    --hero-height: calc(theme('screens.md') / 2);
    --hero-width: 100%;
  }
  .hero {
    h1 {
      font-size: calc((theme('screens.md') / 2) /6);
    }
    .hero-text {
      font-size: calc((theme('screens.md') / 2) /12);
    }
  }
}

@screen lg {
  :root {
    --hero-height: calc(theme('screens.lg') / 2);
  }
  body {
    font-size: 1.125rem;
  }
  .hero {
    h1 {
      font-size: calc((theme('screens.lg') / 2) /6);
    }
    .hero-text {
      font-size: calc((theme('screens.lg') / 2) /12);
      line-height: 3.2rem;
    }
  }
}

@screen xl {
  :root {
    --hero-height: calc(theme('screens.xl') / 2);
  }
  .hero {
    h1 {
      font-size: calc((theme('screens.xl') / 2) /6);
    }
    .hero-text {
      font-size: calc((theme('screens.xl') / 2) /12);
      line-height: 3.5rem;
    }
  }
}
body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

.hero-image {
  height: calc(100vh - 77px);
}
nav a {
  color: var(--foreground-rgb);
  @apply no-underline;
  &:hover,
  &.active {
    @apply text-blue-400 underline cursor-pointer;
  }
}

a {
  @apply text-blue-400 underline;
}

.btn {
  @apply no-underline px-4 py-2 bg-red-600 text-white;
}
.mobile-header {
  max-height: 0;
  overflow: hidden;
  transition: all 0s;
  z-index: -1;
  &.open {
    z-index: 20;
    max-height: 430px;
    transition: all .500s;
  }
  &.close {
    transition: all 0.500s;
  }

  li::after {
    content: '';
    width: calc(100% - 2em);
    display: block;
    border-bottom: 1px solid var(--color-black);
    margin: auto;
  }

  li:last-child {
    &::after {
      border-bottom: 0;
    }
  }
}

@define-mixin tag $name, $color,  {
  .tag-$(name) {
    background-color: var(--color-$(color)-400);
    color: var(--color-white);
  }
  .blog-item-$(name) {
    article {
      background-color: var(--color-$(color)-600);
      color: var(--color-white);
      a {
        color: var(--color-white);
      }
      .read-more {
        background-color: var(--color-$(color)-400);
      }
    }
  }
}
@define-mixin tag-dark $name, $color,  {
  .tag-$(name) {
    background-color: var(--color-$(color)-400);
    color: var(--color-black);
  }
  .blog-item-$(name) {
    article {
      background-color: var(--color-$(color)-600);
      color: var(--color-black);
      a {
        color: var(--color-black);
      }
      .read-more {
        background-color: var(--color-$(color)-400);
      }
    }
  }
}

[class*='tag-'] {
  background-color: var(--color-grey-400);
  color: var(--color-black);
}
[class*='blog-item-'] {
  article {
    background-color: var(--color-grey-600);
    color: var(--color-black);
    a {
      color: var(--color-black);
    }
    .read-more {
      background-color: var(--color-grey-400);
    }
  }
}
@mixin tag travel, red {}
@mixin tag collections, blue {}
@mixin tag photography, plum {}
@mixin tag-dark development, teal {}
@mixin tag-dark games, gold {}
@mixin tag-dark personal, orange {}
@mixin tag-dark escape-rooms, yellow {}

/* PrismJS 1.29.0
https://prismjs.com/download.html#themes=prism-okaidia&languages=markup+css+clike+javascript+bash+shell-session+typescript */
/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */

 code[class*="language-"],
 pre[class*="language-"] {
   color: #f8f8f2;
   background: none;
   text-shadow: 0 1px rgba(0, 0, 0, 0.3);
   font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
   font-size: 1em;
   text-align: left;
   white-space: pre;
   word-spacing: normal;
   word-break: normal;
   word-wrap: normal;
   line-height: 1.5;

   -moz-tab-size: 4;
   -o-tab-size: 4;
   tab-size: 4;

   -webkit-hyphens: none;
   -moz-hyphens: none;
   -ms-hyphens: none;
   hyphens: none;
 }

 /* Code blocks */
 pre[class*="language-"] {
   padding: 1em;
   margin: .5em 0;
   overflow: auto;
   border-radius: 0.3em;
 }

 :not(pre) > code[class*="language-"],
 pre[class*="language-"] {
  background: var(--color-grey-900);
 }

 /* Inline code */
 :not(pre) > code[class*="language-"] {
   padding: .1em;
   border-radius: .3em;
   white-space: normal;
 }

 .token.comment,
 .token.prolog,
 .token.doctype,
 .token.cdata {
   color: #8292a2;
 }

 .token.punctuation {
   color: #f8f8f2;
 }

 .token.namespace {
   opacity: .7;
 }

 .token.property,
 .token.tag,
 .token.constant,
 .token.symbol,
 .token.deleted {
   color: #f92672;
 }

 .token.boolean,
 .token.number {
   color: #ae81ff;
 }

 .token.selector,
 .token.attr-name,
 .token.string,
 .token.char,
 .token.builtin,
 .token.inserted {
   color: #a6e22e;
 }

 .token.operator,
 .token.entity,
 .token.url,
 .language-css .token.string,
 .style .token.string,
 .token.variable {
   color: #f8f8f2;
 }

 .token.atrule,
 .token.attr-value,
 .token.function,
 .token.class-name {
   color: #e6db74;
 }

 .token.keyword {
   color: #66d9ef;
 }

 .token.regex,
 .token.important {
   color: #fd971f;
 }

 .token.important,
 .token.bold {
   font-weight: bold;
 }
 .token.italic {
   font-style: italic;
 }

 .token.entity {
   cursor: help;
 }
